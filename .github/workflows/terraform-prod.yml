name: 'Terraform - Production'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
      confirm_production:
        description: 'Type "CONFIRM" to proceed with production deployment'
        required: true
        type: string

env:
  ARM_USE_MSI: false
  ARM_SKIP_PROVIDER_REGISTRATION: false
  TF_VAR_environment: prod

jobs:
  validate_input:
    name: 'Validate Production Deployment'
    runs-on: ubuntu-latest
    steps:
    - name: Validate Confirmation
      if: github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy'
      run: |
        if [ "${{ github.event.inputs.confirm_production }}" != "CONFIRM" ]; then
          echo "❌ Production deployment not confirmed. Please type 'CONFIRM' exactly."
          exit 1
        fi
        echo "✅ Production deployment confirmed"

  terraform:
    name: 'Terraform Production Environment'
    runs-on: ubuntu-latest
    environment: prod
    needs: validate_input
    
    defaults:
      run:
        shell: bash
        working-directory: ./environments/prod

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.9.0

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -detailed-exitcode -out=tfplan
        echo "plan_exitcode=$?" >> $GITHUB_OUTPUT

    - name: Production Deployment Approval
      if: github.event.inputs.action == 'apply' && steps.plan.outputs.plan_exitcode == '2'
      run: |
        echo "🚨 PRODUCTION DEPLOYMENT STARTING"
        echo "This will make changes to the production environment."
        echo "Plan has been reviewed and approved for deployment."

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve tfplan

    - name: Production Destroy Warning
      if: github.event.inputs.action == 'destroy'
      run: |
        echo "⚠️ WARNING: PRODUCTION ENVIRONMENT DESTRUCTION"
        echo "This will DESTROY the production environment!"
        sleep 10

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve

    - name: Post Deployment Notification
      if: success() && github.event.inputs.action == 'apply'
      run: |
        echo "## 🎉 Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Deployed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "- Verify deployment health" >> $GITHUB_STEP_SUMMARY
        echo "- Update monitoring dashboards" >> $GITHUB_STEP_SUMMARY
        echo "- Notify stakeholders" >> $GITHUB_STEP_SUMMARY

    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "## ❌ Production Deployment Failed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Failed Step:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚨 **Action Required:**" >> $GITHUB_STEP_SUMMARY
        echo "- Review deployment logs" >> $GITHUB_STEP_SUMMARY
        echo "- Check Azure resource status" >> $GITHUB_STEP_SUMMARY
        echo "- Consider rollback if necessary" >> $GITHUB_STEP_SUMMARY