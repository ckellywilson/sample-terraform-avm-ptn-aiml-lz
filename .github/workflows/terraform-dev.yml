name: 'Terraform - Development'

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'environments/dev/**'
      - 'modules/**'
      - '.github/workflows/terraform-dev.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  ARM_USE_MSI: false
  ARM_SKIP_PROVIDER_REGISTRATION: false
  TF_VAR_environment: dev

jobs:
  terraform:
    name: 'Terraform Dev Environment'
    runs-on: ubuntu-latest
    environment: dev
    
    defaults:
      run:
        shell: bash
        working-directory: ./environments/dev

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.9.0

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -detailed-exitcode -out=tfplan
        echo "plan_exitcode=$?" >> $GITHUB_OUTPUT
      continue-on-error: true

    - name: Comment Plan on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('Terraform Plan - Dev Environment')
          );
          
          const output = `#### Terraform Plan - Dev Environment üèóÔ∏è
          
          **Plan Result:** ${{ steps.plan.outputs.plan_exitcode == '0' && 'No Changes' || steps.plan.outputs.plan_exitcode == '2' && 'Changes Detected' || 'Error' }}
          
          <details><summary>Show Plan</summary>
          
          \`\`\`
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          
          </details>
          
          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          if (botComment) {
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: output
            });
          } else {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
          }

    - name: Terraform Apply
      if: (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply') || 
          (github.ref == 'refs/heads/main' && steps.plan.outputs.plan_exitcode == '2')
      run: terraform apply -auto-approve tfplan

    - name: Terraform Destroy
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve